// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft_enum.proto

#ifndef PROTOBUF_raft_5fenum_2eproto__INCLUDED
#define PROTOBUF_raft_5fenum_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace raft_msg {
class KVEntry;
class KVEntryDefaultTypeInternal;
extern KVEntryDefaultTypeInternal _KVEntry_default_instance_;
}  // namespace raft_msg

namespace raft_msg {

namespace protobuf_raft_5fenum_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_raft_5fenum_2eproto

enum JoinRole {
  JoinServer = 0,
  JoinClient = 1
};
bool JoinRole_IsValid(int value);
const JoinRole JoinRole_MIN = JoinServer;
const JoinRole JoinRole_MAX = JoinClient;
const int JoinRole_ARRAYSIZE = JoinRole_MAX + 1;

const ::google::protobuf::EnumDescriptor* JoinRole_descriptor();
inline const ::std::string& JoinRole_Name(JoinRole value) {
  return ::google::protobuf::internal::NameOfEnum(
    JoinRole_descriptor(), value);
}
inline bool JoinRole_Parse(
    const ::std::string& name, JoinRole* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JoinRole>(
    JoinRole_descriptor(), name, value);
}
enum CommandResponseErr {
  CMDWRONGPASS = 0,
  CMDREDIRECT = 1,
  CMDUNKNOWERR = 2
};
bool CommandResponseErr_IsValid(int value);
const CommandResponseErr CommandResponseErr_MIN = CMDWRONGPASS;
const CommandResponseErr CommandResponseErr_MAX = CMDUNKNOWERR;
const int CommandResponseErr_ARRAYSIZE = CommandResponseErr_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommandResponseErr_descriptor();
inline const ::std::string& CommandResponseErr_Name(CommandResponseErr value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommandResponseErr_descriptor(), value);
}
inline bool CommandResponseErr_Parse(
    const ::std::string& name, CommandResponseErr* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandResponseErr>(
    CommandResponseErr_descriptor(), name, value);
}
enum JoinError {
  JOINWRONGPASS = 0,
  JOINUNKNOWERR = 1
};
bool JoinError_IsValid(int value);
const JoinError JoinError_MIN = JOINWRONGPASS;
const JoinError JoinError_MAX = JOINUNKNOWERR;
const int JoinError_ARRAYSIZE = JoinError_MAX + 1;

const ::google::protobuf::EnumDescriptor* JoinError_descriptor();
inline const ::std::string& JoinError_Name(JoinError value) {
  return ::google::protobuf::internal::NameOfEnum(
    JoinError_descriptor(), value);
}
inline bool JoinError_Parse(
    const ::std::string& name, JoinError* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JoinError>(
    JoinError_descriptor(), name, value);
}
enum CommandType {
  RAFT_EVENT_GET = 0,
  RAFT_EVENT_PUT = 1,
  RAFT_EVENT_DELETE = 2
};
bool CommandType_IsValid(int value);
const CommandType CommandType_MIN = RAFT_EVENT_GET;
const CommandType CommandType_MAX = RAFT_EVENT_DELETE;
const int CommandType_ARRAYSIZE = CommandType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommandType_descriptor();
inline const ::std::string& CommandType_Name(CommandType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommandType_descriptor(), value);
}
inline bool CommandType_Parse(
    const ::std::string& name, CommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandType>(
    CommandType_descriptor(), name, value);
}
// ===================================================================

class KVEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft_msg.KVEntry) */ {
 public:
  KVEntry();
  virtual ~KVEntry();

  KVEntry(const KVEntry& from);

  inline KVEntry& operator=(const KVEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KVEntry& default_instance();

  static inline const KVEntry* internal_default_instance() {
    return reinterpret_cast<const KVEntry*>(
               &_KVEntry_default_instance_);
  }

  void Swap(KVEntry* other);

  // implements Message ----------------------------------------------

  inline KVEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  KVEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KVEntry& from);
  void MergeFrom(const KVEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KVEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:raft_msg.KVEntry)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct  protobuf_raft_5fenum_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// KVEntry

// required string key = 1;
inline bool KVEntry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVEntry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVEntry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVEntry::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& KVEntry::key() const {
  // @@protoc_insertion_point(field_get:raft_msg.KVEntry.key)
  return key_.GetNoArena();
}
inline void KVEntry::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft_msg.KVEntry.key)
}
#if LANG_CXX11
inline void KVEntry::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft_msg.KVEntry.key)
}
#endif
inline void KVEntry::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft_msg.KVEntry.key)
}
inline void KVEntry::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft_msg.KVEntry.key)
}
inline ::std::string* KVEntry::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:raft_msg.KVEntry.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KVEntry::release_key() {
  // @@protoc_insertion_point(field_release:raft_msg.KVEntry.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KVEntry::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:raft_msg.KVEntry.key)
}

// optional string value = 2;
inline bool KVEntry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KVEntry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KVEntry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KVEntry::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& KVEntry::value() const {
  // @@protoc_insertion_point(field_get:raft_msg.KVEntry.value)
  return value_.GetNoArena();
}
inline void KVEntry::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft_msg.KVEntry.value)
}
#if LANG_CXX11
inline void KVEntry::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft_msg.KVEntry.value)
}
#endif
inline void KVEntry::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft_msg.KVEntry.value)
}
inline void KVEntry::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft_msg.KVEntry.value)
}
inline ::std::string* KVEntry::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:raft_msg.KVEntry.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KVEntry::release_value() {
  // @@protoc_insertion_point(field_release:raft_msg.KVEntry.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KVEntry::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:raft_msg.KVEntry.value)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace raft_msg

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::raft_msg::JoinRole> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::raft_msg::JoinRole>() {
  return ::raft_msg::JoinRole_descriptor();
}
template <> struct is_proto_enum< ::raft_msg::CommandResponseErr> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::raft_msg::CommandResponseErr>() {
  return ::raft_msg::CommandResponseErr_descriptor();
}
template <> struct is_proto_enum< ::raft_msg::JoinError> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::raft_msg::JoinError>() {
  return ::raft_msg::JoinError_descriptor();
}
template <> struct is_proto_enum< ::raft_msg::CommandType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::raft_msg::CommandType>() {
  return ::raft_msg::CommandType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_raft_5fenum_2eproto__INCLUDED
