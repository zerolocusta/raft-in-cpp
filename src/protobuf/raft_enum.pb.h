// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: raft_enum.proto

#ifndef PROTOBUF_raft_5fenum_2eproto__INCLUDED
#define PROTOBUF_raft_5fenum_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
namespace raft_msg {
}  // namespace raft_msg

namespace raft_msg {

namespace protobuf_raft_5fenum_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_raft_5fenum_2eproto

enum CommandResponseErr {
  CMDWRONGPASS = 0,
  CMDREDIRECT = 1,
  CMDUNKNOWERR = 2
};
bool CommandResponseErr_IsValid(int value);
const CommandResponseErr CommandResponseErr_MIN = CMDWRONGPASS;
const CommandResponseErr CommandResponseErr_MAX = CMDUNKNOWERR;
const int CommandResponseErr_ARRAYSIZE = CommandResponseErr_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommandResponseErr_descriptor();
inline const ::std::string& CommandResponseErr_Name(CommandResponseErr value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommandResponseErr_descriptor(), value);
}
inline bool CommandResponseErr_Parse(
    const ::std::string& name, CommandResponseErr* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandResponseErr>(
    CommandResponseErr_descriptor(), name, value);
}
enum JoinError {
  JOINWRONGPASS = 0,
  JOINUNKNOWERR = 1
};
bool JoinError_IsValid(int value);
const JoinError JoinError_MIN = JOINWRONGPASS;
const JoinError JoinError_MAX = JOINUNKNOWERR;
const int JoinError_ARRAYSIZE = JoinError_MAX + 1;

const ::google::protobuf::EnumDescriptor* JoinError_descriptor();
inline const ::std::string& JoinError_Name(JoinError value) {
  return ::google::protobuf::internal::NameOfEnum(
    JoinError_descriptor(), value);
}
inline bool JoinError_Parse(
    const ::std::string& name, JoinError* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JoinError>(
    JoinError_descriptor(), name, value);
}
enum CommandType {
  RAFT_EVENT_GET = 0,
  RAFT_EVENT_PUT = 1,
  RAFT_EVENT_DELETE = 2
};
bool CommandType_IsValid(int value);
const CommandType CommandType_MIN = RAFT_EVENT_GET;
const CommandType CommandType_MAX = RAFT_EVENT_DELETE;
const int CommandType_ARRAYSIZE = CommandType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommandType_descriptor();
inline const ::std::string& CommandType_Name(CommandType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommandType_descriptor(), value);
}
inline bool CommandType_Parse(
    const ::std::string& name, CommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandType>(
    CommandType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace raft_msg

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::raft_msg::CommandResponseErr> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::raft_msg::CommandResponseErr>() {
  return ::raft_msg::CommandResponseErr_descriptor();
}
template <> struct is_proto_enum< ::raft_msg::JoinError> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::raft_msg::JoinError>() {
  return ::raft_msg::JoinError_descriptor();
}
template <> struct is_proto_enum< ::raft_msg::CommandType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::raft_msg::CommandType>() {
  return ::raft_msg::CommandType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_raft_5fenum_2eproto__INCLUDED
