// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command_response.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "command_response.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace raft_msg {
class CommandResponse_EntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CommandResponse_Entry> {
} _CommandResponse_Entry_default_instance_;
class CommandResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CommandResponse> {
} _CommandResponse_default_instance_;

namespace protobuf_command_5fresponse_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandResponse_Entry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandResponse_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandResponse_Entry, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandResponse_Entry, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandResponse, command_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandResponse, passwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandResponse, command_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandResponse, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CommandResponse, result_),
  2,
  3,
  0,
  4,
  5,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(CommandResponse_Entry)},
  { 8, 18, sizeof(CommandResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CommandResponse_Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CommandResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "command_response.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _CommandResponse_Entry_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CommandResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::raft_msg::protobuf_raft_5fenum_2eproto::InitDefaults();
  _CommandResponse_Entry_default_instance_.DefaultConstruct();
  _CommandResponse_default_instance_.DefaultConstruct();
  _CommandResponse_default_instance_.get_mutable()->result_ = const_cast< ::raft_msg::CommandResponse_Entry*>(
      ::raft_msg::CommandResponse_Entry::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\026command_response.proto\022\010raft_msg\032\017raft"
      "_enum.proto\"\364\001\n\017CommandResponse\022\022\n\ncomma"
      "nd_id\030\001 \002(\004\022\017\n\007success\030\002 \002(\010\022\016\n\006passwd\030\003"
      " \002(\t\022+\n\014command_type\030\004 \002(\0162\025.raft_msg.Co"
      "mmandType\022)\n\003err\030\005 \002(\0162\034.raft_msg.Comman"
      "dResponseErr\022/\n\006result\030\006 \002(\0132\037.raft_msg."
      "CommandResponse.Entry\032#\n\005Entry\022\013\n\003key\030\001 "
      "\002(\t\022\r\n\005value\030\002 \002(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 298);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "command_response.proto", &protobuf_RegisterTypes);
  ::raft_msg::protobuf_raft_5fenum_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_command_5fresponse_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommandResponse_Entry::kKeyFieldNumber;
const int CommandResponse_Entry::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommandResponse_Entry::CommandResponse_Entry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_5fresponse_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:raft_msg.CommandResponse.Entry)
}
CommandResponse_Entry::CommandResponse_Entry(const CommandResponse_Entry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:raft_msg.CommandResponse.Entry)
}

void CommandResponse_Entry::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CommandResponse_Entry::~CommandResponse_Entry() {
  // @@protoc_insertion_point(destructor:raft_msg.CommandResponse.Entry)
  SharedDtor();
}

void CommandResponse_Entry::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CommandResponse_Entry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommandResponse_Entry::descriptor() {
  protobuf_command_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_command_5fresponse_2eproto::file_level_metadata[0].descriptor;
}

const CommandResponse_Entry& CommandResponse_Entry::default_instance() {
  protobuf_command_5fresponse_2eproto::InitDefaults();
  return *internal_default_instance();
}

CommandResponse_Entry* CommandResponse_Entry::New(::google::protobuf::Arena* arena) const {
  CommandResponse_Entry* n = new CommandResponse_Entry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommandResponse_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:raft_msg.CommandResponse.Entry)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (has_value()) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CommandResponse_Entry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raft_msg.CommandResponse.Entry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "raft_msg.CommandResponse.Entry.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string value = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "raft_msg.CommandResponse.Entry.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raft_msg.CommandResponse.Entry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raft_msg.CommandResponse.Entry)
  return false;
#undef DO_
}

void CommandResponse_Entry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raft_msg.CommandResponse.Entry)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "raft_msg.CommandResponse.Entry.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "raft_msg.CommandResponse.Entry.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:raft_msg.CommandResponse.Entry)
}

::google::protobuf::uint8* CommandResponse_Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raft_msg.CommandResponse.Entry)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "raft_msg.CommandResponse.Entry.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "raft_msg.CommandResponse.Entry.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raft_msg.CommandResponse.Entry)
  return target;
}

size_t CommandResponse_Entry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:raft_msg.CommandResponse.Entry)
  size_t total_size = 0;

  if (has_key()) {
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  if (has_value()) {
    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  return total_size;
}
size_t CommandResponse_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raft_msg.CommandResponse.Entry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string key = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

    // required string value = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommandResponse_Entry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raft_msg.CommandResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const CommandResponse_Entry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommandResponse_Entry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raft_msg.CommandResponse.Entry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raft_msg.CommandResponse.Entry)
    MergeFrom(*source);
  }
}

void CommandResponse_Entry::MergeFrom(const CommandResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raft_msg.CommandResponse.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_value()) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CommandResponse_Entry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raft_msg.CommandResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandResponse_Entry::CopyFrom(const CommandResponse_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raft_msg.CommandResponse.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandResponse_Entry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CommandResponse_Entry::Swap(CommandResponse_Entry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommandResponse_Entry::InternalSwap(CommandResponse_Entry* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommandResponse_Entry::GetMetadata() const {
  protobuf_command_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_command_5fresponse_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommandResponse_Entry

// required string key = 1;
bool CommandResponse_Entry::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CommandResponse_Entry::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void CommandResponse_Entry::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void CommandResponse_Entry::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& CommandResponse_Entry::key() const {
  // @@protoc_insertion_point(field_get:raft_msg.CommandResponse.Entry.key)
  return key_.GetNoArena();
}
void CommandResponse_Entry::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft_msg.CommandResponse.Entry.key)
}
#if LANG_CXX11
void CommandResponse_Entry::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft_msg.CommandResponse.Entry.key)
}
#endif
void CommandResponse_Entry::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft_msg.CommandResponse.Entry.key)
}
void CommandResponse_Entry::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft_msg.CommandResponse.Entry.key)
}
::std::string* CommandResponse_Entry::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:raft_msg.CommandResponse.Entry.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CommandResponse_Entry::release_key() {
  // @@protoc_insertion_point(field_release:raft_msg.CommandResponse.Entry.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommandResponse_Entry::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:raft_msg.CommandResponse.Entry.key)
}

// required string value = 2;
bool CommandResponse_Entry::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CommandResponse_Entry::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CommandResponse_Entry::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CommandResponse_Entry::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& CommandResponse_Entry::value() const {
  // @@protoc_insertion_point(field_get:raft_msg.CommandResponse.Entry.value)
  return value_.GetNoArena();
}
void CommandResponse_Entry::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft_msg.CommandResponse.Entry.value)
}
#if LANG_CXX11
void CommandResponse_Entry::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft_msg.CommandResponse.Entry.value)
}
#endif
void CommandResponse_Entry::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft_msg.CommandResponse.Entry.value)
}
void CommandResponse_Entry::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft_msg.CommandResponse.Entry.value)
}
::std::string* CommandResponse_Entry::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:raft_msg.CommandResponse.Entry.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CommandResponse_Entry::release_value() {
  // @@protoc_insertion_point(field_release:raft_msg.CommandResponse.Entry.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommandResponse_Entry::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:raft_msg.CommandResponse.Entry.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommandResponse::kCommandIdFieldNumber;
const int CommandResponse::kSuccessFieldNumber;
const int CommandResponse::kPasswdFieldNumber;
const int CommandResponse::kCommandTypeFieldNumber;
const int CommandResponse::kErrFieldNumber;
const int CommandResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommandResponse::CommandResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_5fresponse_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:raft_msg.CommandResponse)
}
CommandResponse::CommandResponse(const CommandResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_passwd()) {
    passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
  }
  if (from.has_result()) {
    result_ = new ::raft_msg::CommandResponse_Entry(*from.result_);
  } else {
    result_ = NULL;
  }
  ::memcpy(&command_id_, &from.command_id_,
    reinterpret_cast<char*>(&err_) -
    reinterpret_cast<char*>(&command_id_) + sizeof(err_));
  // @@protoc_insertion_point(copy_constructor:raft_msg.CommandResponse)
}

void CommandResponse::SharedCtor() {
  _cached_size_ = 0;
  passwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_, 0, reinterpret_cast<char*>(&err_) -
    reinterpret_cast<char*>(&result_) + sizeof(err_));
}

CommandResponse::~CommandResponse() {
  // @@protoc_insertion_point(destructor:raft_msg.CommandResponse)
  SharedDtor();
}

void CommandResponse::SharedDtor() {
  passwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete result_;
  }
}

void CommandResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommandResponse::descriptor() {
  protobuf_command_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_command_5fresponse_2eproto::file_level_metadata[1].descriptor;
}

const CommandResponse& CommandResponse::default_instance() {
  protobuf_command_5fresponse_2eproto::InitDefaults();
  return *internal_default_instance();
}

CommandResponse* CommandResponse::New(::google::protobuf::Arena* arena) const {
  CommandResponse* n = new CommandResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:raft_msg.CommandResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_passwd()) {
      GOOGLE_DCHECK(!passwd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*passwd_.UnsafeRawStringPointer())->clear();
    }
    if (has_result()) {
      GOOGLE_DCHECK(result_ != NULL);
      result_->::raft_msg::CommandResponse_Entry::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 60u) {
    ::memset(&command_id_, 0, reinterpret_cast<char*>(&err_) -
      reinterpret_cast<char*>(&command_id_) + sizeof(err_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CommandResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:raft_msg.CommandResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 command_id = 1;
      case 1: {
        if (tag == 8u) {
          set_has_command_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &command_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool success = 2;
      case 2: {
        if (tag == 16u) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string passwd = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->passwd().data(), this->passwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "raft_msg.CommandResponse.passwd");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .raft_msg.CommandType command_type = 4;
      case 4: {
        if (tag == 32u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::raft_msg::CommandType_IsValid(value)) {
            set_command_type(static_cast< ::raft_msg::CommandType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .raft_msg.CommandResponseErr err = 5;
      case 5: {
        if (tag == 40u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::raft_msg::CommandResponseErr_IsValid(value)) {
            set_err(static_cast< ::raft_msg::CommandResponseErr >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .raft_msg.CommandResponse.Entry result = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:raft_msg.CommandResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:raft_msg.CommandResponse)
  return false;
#undef DO_
}

void CommandResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:raft_msg.CommandResponse)
  // required uint64 command_id = 1;
  if (has_command_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->command_id(), output);
  }

  // required bool success = 2;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->success(), output);
  }

  // required string passwd = 3;
  if (has_passwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "raft_msg.CommandResponse.passwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->passwd(), output);
  }

  // required .raft_msg.CommandType command_type = 4;
  if (has_command_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->command_type(), output);
  }

  // required .raft_msg.CommandResponseErr err = 5;
  if (has_err()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->err(), output);
  }

  // required .raft_msg.CommandResponse.Entry result = 6;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->result_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:raft_msg.CommandResponse)
}

::google::protobuf::uint8* CommandResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:raft_msg.CommandResponse)
  // required uint64 command_id = 1;
  if (has_command_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->command_id(), target);
  }

  // required bool success = 2;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->success(), target);
  }

  // required string passwd = 3;
  if (has_passwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd().data(), this->passwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "raft_msg.CommandResponse.passwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->passwd(), target);
  }

  // required .raft_msg.CommandType command_type = 4;
  if (has_command_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->command_type(), target);
  }

  // required .raft_msg.CommandResponseErr err = 5;
  if (has_err()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->err(), target);
  }

  // required .raft_msg.CommandResponse.Entry result = 6;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->result_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:raft_msg.CommandResponse)
  return target;
}

size_t CommandResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:raft_msg.CommandResponse)
  size_t total_size = 0;

  if (has_passwd()) {
    // required string passwd = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());
  }

  if (has_result()) {
    // required .raft_msg.CommandResponse.Entry result = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->result_);
  }

  if (has_command_id()) {
    // required uint64 command_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->command_id());
  }

  if (has_success()) {
    // required bool success = 2;
    total_size += 1 + 1;
  }

  if (has_command_type()) {
    // required .raft_msg.CommandType command_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command_type());
  }

  if (has_err()) {
    // required .raft_msg.CommandResponseErr err = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());
  }

  return total_size;
}
size_t CommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:raft_msg.CommandResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string passwd = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd());

    // required .raft_msg.CommandResponse.Entry result = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->result_);

    // required uint64 command_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->command_id());

    // required bool success = 2;
    total_size += 1 + 1;

    // required .raft_msg.CommandType command_type = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command_type());

    // required .raft_msg.CommandResponseErr err = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->err());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommandResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:raft_msg.CommandResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CommandResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommandResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:raft_msg.CommandResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:raft_msg.CommandResponse)
    MergeFrom(*source);
  }
}

void CommandResponse::MergeFrom(const CommandResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:raft_msg.CommandResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 63u) {
    if (from.has_passwd()) {
      set_has_passwd();
      passwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd_);
    }
    if (from.has_result()) {
      mutable_result()->::raft_msg::CommandResponse_Entry::MergeFrom(from.result());
    }
    if (from.has_command_id()) {
      set_command_id(from.command_id());
    }
    if (from.has_success()) {
      set_success(from.success());
    }
    if (from.has_command_type()) {
      set_command_type(from.command_type());
    }
    if (from.has_err()) {
      set_err(from.err());
    }
  }
}

void CommandResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:raft_msg.CommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandResponse::CopyFrom(const CommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:raft_msg.CommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  if (has_result()) {
    if (!this->result_->IsInitialized()) return false;
  }
  return true;
}

void CommandResponse::Swap(CommandResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommandResponse::InternalSwap(CommandResponse* other) {
  passwd_.Swap(&other->passwd_);
  std::swap(result_, other->result_);
  std::swap(command_id_, other->command_id_);
  std::swap(success_, other->success_);
  std::swap(command_type_, other->command_type_);
  std::swap(err_, other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommandResponse::GetMetadata() const {
  protobuf_command_5fresponse_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_command_5fresponse_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CommandResponse

// required uint64 command_id = 1;
bool CommandResponse::has_command_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CommandResponse::set_has_command_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CommandResponse::clear_has_command_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CommandResponse::clear_command_id() {
  command_id_ = GOOGLE_ULONGLONG(0);
  clear_has_command_id();
}
::google::protobuf::uint64 CommandResponse::command_id() const {
  // @@protoc_insertion_point(field_get:raft_msg.CommandResponse.command_id)
  return command_id_;
}
void CommandResponse::set_command_id(::google::protobuf::uint64 value) {
  set_has_command_id();
  command_id_ = value;
  // @@protoc_insertion_point(field_set:raft_msg.CommandResponse.command_id)
}

// required bool success = 2;
bool CommandResponse::has_success() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CommandResponse::set_has_success() {
  _has_bits_[0] |= 0x00000008u;
}
void CommandResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000008u;
}
void CommandResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
bool CommandResponse::success() const {
  // @@protoc_insertion_point(field_get:raft_msg.CommandResponse.success)
  return success_;
}
void CommandResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:raft_msg.CommandResponse.success)
}

// required string passwd = 3;
bool CommandResponse::has_passwd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CommandResponse::set_has_passwd() {
  _has_bits_[0] |= 0x00000001u;
}
void CommandResponse::clear_has_passwd() {
  _has_bits_[0] &= ~0x00000001u;
}
void CommandResponse::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_passwd();
}
const ::std::string& CommandResponse::passwd() const {
  // @@protoc_insertion_point(field_get:raft_msg.CommandResponse.passwd)
  return passwd_.GetNoArena();
}
void CommandResponse::set_passwd(const ::std::string& value) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft_msg.CommandResponse.passwd)
}
#if LANG_CXX11
void CommandResponse::set_passwd(::std::string&& value) {
  set_has_passwd();
  passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft_msg.CommandResponse.passwd)
}
#endif
void CommandResponse::set_passwd(const char* value) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft_msg.CommandResponse.passwd)
}
void CommandResponse::set_passwd(const char* value, size_t size) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft_msg.CommandResponse.passwd)
}
::std::string* CommandResponse::mutable_passwd() {
  set_has_passwd();
  // @@protoc_insertion_point(field_mutable:raft_msg.CommandResponse.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CommandResponse::release_passwd() {
  // @@protoc_insertion_point(field_release:raft_msg.CommandResponse.passwd)
  clear_has_passwd();
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CommandResponse::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    set_has_passwd();
  } else {
    clear_has_passwd();
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:raft_msg.CommandResponse.passwd)
}

// required .raft_msg.CommandType command_type = 4;
bool CommandResponse::has_command_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CommandResponse::set_has_command_type() {
  _has_bits_[0] |= 0x00000010u;
}
void CommandResponse::clear_has_command_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void CommandResponse::clear_command_type() {
  command_type_ = 0;
  clear_has_command_type();
}
::raft_msg::CommandType CommandResponse::command_type() const {
  // @@protoc_insertion_point(field_get:raft_msg.CommandResponse.command_type)
  return static_cast< ::raft_msg::CommandType >(command_type_);
}
void CommandResponse::set_command_type(::raft_msg::CommandType value) {
  assert(::raft_msg::CommandType_IsValid(value));
  set_has_command_type();
  command_type_ = value;
  // @@protoc_insertion_point(field_set:raft_msg.CommandResponse.command_type)
}

// required .raft_msg.CommandResponseErr err = 5;
bool CommandResponse::has_err() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CommandResponse::set_has_err() {
  _has_bits_[0] |= 0x00000020u;
}
void CommandResponse::clear_has_err() {
  _has_bits_[0] &= ~0x00000020u;
}
void CommandResponse::clear_err() {
  err_ = 0;
  clear_has_err();
}
::raft_msg::CommandResponseErr CommandResponse::err() const {
  // @@protoc_insertion_point(field_get:raft_msg.CommandResponse.err)
  return static_cast< ::raft_msg::CommandResponseErr >(err_);
}
void CommandResponse::set_err(::raft_msg::CommandResponseErr value) {
  assert(::raft_msg::CommandResponseErr_IsValid(value));
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:raft_msg.CommandResponse.err)
}

// required .raft_msg.CommandResponse.Entry result = 6;
bool CommandResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CommandResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void CommandResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void CommandResponse::clear_result() {
  if (result_ != NULL) result_->::raft_msg::CommandResponse_Entry::Clear();
  clear_has_result();
}
const ::raft_msg::CommandResponse_Entry& CommandResponse::result() const {
  // @@protoc_insertion_point(field_get:raft_msg.CommandResponse.result)
  return result_ != NULL ? *result_
                         : *::raft_msg::CommandResponse_Entry::internal_default_instance();
}
::raft_msg::CommandResponse_Entry* CommandResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) {
    result_ = new ::raft_msg::CommandResponse_Entry;
  }
  // @@protoc_insertion_point(field_mutable:raft_msg.CommandResponse.result)
  return result_;
}
::raft_msg::CommandResponse_Entry* CommandResponse::release_result() {
  // @@protoc_insertion_point(field_release:raft_msg.CommandResponse.result)
  clear_has_result();
  ::raft_msg::CommandResponse_Entry* temp = result_;
  result_ = NULL;
  return temp;
}
void CommandResponse::set_allocated_result(::raft_msg::CommandResponse_Entry* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:raft_msg.CommandResponse.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace raft_msg

// @@protoc_insertion_point(global_scope)
