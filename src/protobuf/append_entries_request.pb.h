// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: append_entries_request.proto

#ifndef PROTOBUF_append_5fentries_5frequest_2eproto__INCLUDED
#define PROTOBUF_append_5fentries_5frequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "log_entry.pb.h"
// @@protoc_insertion_point(includes)
namespace raft_msg {
class AppendEntriesRequest;
class AppendEntriesRequestDefaultTypeInternal;
extern AppendEntriesRequestDefaultTypeInternal _AppendEntriesRequest_default_instance_;
class LogEntry;
class LogEntryDefaultTypeInternal;
extern LogEntryDefaultTypeInternal _LogEntry_default_instance_;
class LogEntry_Entry;
class LogEntry_EntryDefaultTypeInternal;
extern LogEntry_EntryDefaultTypeInternal _LogEntry_Entry_default_instance_;
}  // namespace raft_msg

namespace raft_msg {

namespace protobuf_append_5fentries_5frequest_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_append_5fentries_5frequest_2eproto

// ===================================================================

class AppendEntriesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft_msg.AppendEntriesRequest) */ {
 public:
  AppendEntriesRequest();
  virtual ~AppendEntriesRequest();

  AppendEntriesRequest(const AppendEntriesRequest& from);

  inline AppendEntriesRequest& operator=(const AppendEntriesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppendEntriesRequest& default_instance();

  static inline const AppendEntriesRequest* internal_default_instance() {
    return reinterpret_cast<const AppendEntriesRequest*>(
               &_AppendEntriesRequest_default_instance_);
  }

  void Swap(AppendEntriesRequest* other);

  // implements Message ----------------------------------------------

  inline AppendEntriesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AppendEntriesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AppendEntriesRequest& from);
  void MergeFrom(const AppendEntriesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AppendEntriesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .raft_msg.LogEntry entries = 6;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 6;
  const ::raft_msg::LogEntry& entries(int index) const;
  ::raft_msg::LogEntry* mutable_entries(int index);
  ::raft_msg::LogEntry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::raft_msg::LogEntry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::raft_msg::LogEntry >&
      entries() const;

  // required string leader_name = 5;
  bool has_leader_name() const;
  void clear_leader_name();
  static const int kLeaderNameFieldNumber = 5;
  const ::std::string& leader_name() const;
  void set_leader_name(const ::std::string& value);
  #if LANG_CXX11
  void set_leader_name(::std::string&& value);
  #endif
  void set_leader_name(const char* value);
  void set_leader_name(const char* value, size_t size);
  ::std::string* mutable_leader_name();
  ::std::string* release_leader_name();
  void set_allocated_leader_name(::std::string* leader_name);

  // required uint64 term = 1;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // required uint64 prev_log_index = 2;
  bool has_prev_log_index() const;
  void clear_prev_log_index();
  static const int kPrevLogIndexFieldNumber = 2;
  ::google::protobuf::uint64 prev_log_index() const;
  void set_prev_log_index(::google::protobuf::uint64 value);

  // required uint64 prev_log_term = 3;
  bool has_prev_log_term() const;
  void clear_prev_log_term();
  static const int kPrevLogTermFieldNumber = 3;
  ::google::protobuf::uint64 prev_log_term() const;
  void set_prev_log_term(::google::protobuf::uint64 value);

  // required uint64 commit_index = 4;
  bool has_commit_index() const;
  void clear_commit_index();
  static const int kCommitIndexFieldNumber = 4;
  ::google::protobuf::uint64 commit_index() const;
  void set_commit_index(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:raft_msg.AppendEntriesRequest)
 private:
  void set_has_term();
  void clear_has_term();
  void set_has_prev_log_index();
  void clear_has_prev_log_index();
  void set_has_prev_log_term();
  void clear_has_prev_log_term();
  void set_has_commit_index();
  void clear_has_commit_index();
  void set_has_leader_name();
  void clear_has_leader_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::raft_msg::LogEntry > entries_;
  ::google::protobuf::internal::ArenaStringPtr leader_name_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 prev_log_index_;
  ::google::protobuf::uint64 prev_log_term_;
  ::google::protobuf::uint64 commit_index_;
  friend struct  protobuf_append_5fentries_5frequest_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AppendEntriesRequest

// required uint64 term = 1;
inline bool AppendEntriesRequest::has_term() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppendEntriesRequest::set_has_term() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppendEntriesRequest::clear_has_term() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppendEntriesRequest::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 AppendEntriesRequest::term() const {
  // @@protoc_insertion_point(field_get:raft_msg.AppendEntriesRequest.term)
  return term_;
}
inline void AppendEntriesRequest::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:raft_msg.AppendEntriesRequest.term)
}

// required uint64 prev_log_index = 2;
inline bool AppendEntriesRequest::has_prev_log_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppendEntriesRequest::set_has_prev_log_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppendEntriesRequest::clear_has_prev_log_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppendEntriesRequest::clear_prev_log_index() {
  prev_log_index_ = GOOGLE_ULONGLONG(0);
  clear_has_prev_log_index();
}
inline ::google::protobuf::uint64 AppendEntriesRequest::prev_log_index() const {
  // @@protoc_insertion_point(field_get:raft_msg.AppendEntriesRequest.prev_log_index)
  return prev_log_index_;
}
inline void AppendEntriesRequest::set_prev_log_index(::google::protobuf::uint64 value) {
  set_has_prev_log_index();
  prev_log_index_ = value;
  // @@protoc_insertion_point(field_set:raft_msg.AppendEntriesRequest.prev_log_index)
}

// required uint64 prev_log_term = 3;
inline bool AppendEntriesRequest::has_prev_log_term() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppendEntriesRequest::set_has_prev_log_term() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppendEntriesRequest::clear_has_prev_log_term() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppendEntriesRequest::clear_prev_log_term() {
  prev_log_term_ = GOOGLE_ULONGLONG(0);
  clear_has_prev_log_term();
}
inline ::google::protobuf::uint64 AppendEntriesRequest::prev_log_term() const {
  // @@protoc_insertion_point(field_get:raft_msg.AppendEntriesRequest.prev_log_term)
  return prev_log_term_;
}
inline void AppendEntriesRequest::set_prev_log_term(::google::protobuf::uint64 value) {
  set_has_prev_log_term();
  prev_log_term_ = value;
  // @@protoc_insertion_point(field_set:raft_msg.AppendEntriesRequest.prev_log_term)
}

// required uint64 commit_index = 4;
inline bool AppendEntriesRequest::has_commit_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppendEntriesRequest::set_has_commit_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppendEntriesRequest::clear_has_commit_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppendEntriesRequest::clear_commit_index() {
  commit_index_ = GOOGLE_ULONGLONG(0);
  clear_has_commit_index();
}
inline ::google::protobuf::uint64 AppendEntriesRequest::commit_index() const {
  // @@protoc_insertion_point(field_get:raft_msg.AppendEntriesRequest.commit_index)
  return commit_index_;
}
inline void AppendEntriesRequest::set_commit_index(::google::protobuf::uint64 value) {
  set_has_commit_index();
  commit_index_ = value;
  // @@protoc_insertion_point(field_set:raft_msg.AppendEntriesRequest.commit_index)
}

// required string leader_name = 5;
inline bool AppendEntriesRequest::has_leader_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppendEntriesRequest::set_has_leader_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppendEntriesRequest::clear_has_leader_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppendEntriesRequest::clear_leader_name() {
  leader_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_leader_name();
}
inline const ::std::string& AppendEntriesRequest::leader_name() const {
  // @@protoc_insertion_point(field_get:raft_msg.AppendEntriesRequest.leader_name)
  return leader_name_.GetNoArena();
}
inline void AppendEntriesRequest::set_leader_name(const ::std::string& value) {
  set_has_leader_name();
  leader_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft_msg.AppendEntriesRequest.leader_name)
}
#if LANG_CXX11
inline void AppendEntriesRequest::set_leader_name(::std::string&& value) {
  set_has_leader_name();
  leader_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft_msg.AppendEntriesRequest.leader_name)
}
#endif
inline void AppendEntriesRequest::set_leader_name(const char* value) {
  set_has_leader_name();
  leader_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft_msg.AppendEntriesRequest.leader_name)
}
inline void AppendEntriesRequest::set_leader_name(const char* value, size_t size) {
  set_has_leader_name();
  leader_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft_msg.AppendEntriesRequest.leader_name)
}
inline ::std::string* AppendEntriesRequest::mutable_leader_name() {
  set_has_leader_name();
  // @@protoc_insertion_point(field_mutable:raft_msg.AppendEntriesRequest.leader_name)
  return leader_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppendEntriesRequest::release_leader_name() {
  // @@protoc_insertion_point(field_release:raft_msg.AppendEntriesRequest.leader_name)
  clear_has_leader_name();
  return leader_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppendEntriesRequest::set_allocated_leader_name(::std::string* leader_name) {
  if (leader_name != NULL) {
    set_has_leader_name();
  } else {
    clear_has_leader_name();
  }
  leader_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), leader_name);
  // @@protoc_insertion_point(field_set_allocated:raft_msg.AppendEntriesRequest.leader_name)
}

// repeated .raft_msg.LogEntry entries = 6;
inline int AppendEntriesRequest::entries_size() const {
  return entries_.size();
}
inline void AppendEntriesRequest::clear_entries() {
  entries_.Clear();
}
inline const ::raft_msg::LogEntry& AppendEntriesRequest::entries(int index) const {
  // @@protoc_insertion_point(field_get:raft_msg.AppendEntriesRequest.entries)
  return entries_.Get(index);
}
inline ::raft_msg::LogEntry* AppendEntriesRequest::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:raft_msg.AppendEntriesRequest.entries)
  return entries_.Mutable(index);
}
inline ::raft_msg::LogEntry* AppendEntriesRequest::add_entries() {
  // @@protoc_insertion_point(field_add:raft_msg.AppendEntriesRequest.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::raft_msg::LogEntry >*
AppendEntriesRequest::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:raft_msg.AppendEntriesRequest.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::raft_msg::LogEntry >&
AppendEntriesRequest::entries() const {
  // @@protoc_insertion_point(field_list:raft_msg.AppendEntriesRequest.entries)
  return entries_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace raft_msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_append_5fentries_5frequest_2eproto__INCLUDED
