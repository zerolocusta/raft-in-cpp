// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: join_response.proto

#ifndef PROTOBUF_join_5fresponse_2eproto__INCLUDED
#define PROTOBUF_join_5fresponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "raft_enum.pb.h"
// @@protoc_insertion_point(includes)
namespace raft_msg {
class JoinResponse;
class JoinResponseDefaultTypeInternal;
extern JoinResponseDefaultTypeInternal _JoinResponse_default_instance_;
class KVEntry;
class KVEntryDefaultTypeInternal;
extern KVEntryDefaultTypeInternal _KVEntry_default_instance_;
}  // namespace raft_msg

namespace raft_msg {

namespace protobuf_join_5fresponse_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_join_5fresponse_2eproto

// ===================================================================

class JoinResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:raft_msg.JoinResponse) */ {
 public:
  JoinResponse();
  virtual ~JoinResponse();

  JoinResponse(const JoinResponse& from);

  inline JoinResponse& operator=(const JoinResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinResponse& default_instance();

  static inline const JoinResponse* internal_default_instance() {
    return reinterpret_cast<const JoinResponse*>(
               &_JoinResponse_default_instance_);
  }

  void Swap(JoinResponse* other);

  // implements Message ----------------------------------------------

  inline JoinResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinResponse& from);
  void MergeFrom(const JoinResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string myname = 2;
  bool has_myname() const;
  void clear_myname();
  static const int kMynameFieldNumber = 2;
  const ::std::string& myname() const;
  void set_myname(const ::std::string& value);
  #if LANG_CXX11
  void set_myname(::std::string&& value);
  #endif
  void set_myname(const char* value);
  void set_myname(const char* value, size_t size);
  ::std::string* mutable_myname();
  ::std::string* release_myname();
  void set_allocated_myname(::std::string* myname);

  // required string passwd = 3;
  bool has_passwd() const;
  void clear_passwd();
  static const int kPasswdFieldNumber = 3;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  #if LANG_CXX11
  void set_passwd(::std::string&& value);
  #endif
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // required bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // optional .raft_msg.JoinError join_err = 4;
  bool has_join_err() const;
  void clear_join_err();
  static const int kJoinErrFieldNumber = 4;
  ::raft_msg::JoinError join_err() const;
  void set_join_err(::raft_msg::JoinError value);

  // @@protoc_insertion_point(class_scope:raft_msg.JoinResponse)
 private:
  void set_has_success();
  void clear_has_success();
  void set_has_myname();
  void clear_has_myname();
  void set_has_passwd();
  void clear_has_passwd();
  void set_has_join_err();
  void clear_has_join_err();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr myname_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  bool success_;
  int join_err_;
  friend struct  protobuf_join_5fresponse_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinResponse

// required bool success = 1;
inline bool JoinResponse::has_success() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoinResponse::set_has_success() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoinResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoinResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool JoinResponse::success() const {
  // @@protoc_insertion_point(field_get:raft_msg.JoinResponse.success)
  return success_;
}
inline void JoinResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:raft_msg.JoinResponse.success)
}

// required string myname = 2;
inline bool JoinResponse::has_myname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinResponse::set_has_myname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinResponse::clear_has_myname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinResponse::clear_myname() {
  myname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_myname();
}
inline const ::std::string& JoinResponse::myname() const {
  // @@protoc_insertion_point(field_get:raft_msg.JoinResponse.myname)
  return myname_.GetNoArena();
}
inline void JoinResponse::set_myname(const ::std::string& value) {
  set_has_myname();
  myname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft_msg.JoinResponse.myname)
}
#if LANG_CXX11
inline void JoinResponse::set_myname(::std::string&& value) {
  set_has_myname();
  myname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft_msg.JoinResponse.myname)
}
#endif
inline void JoinResponse::set_myname(const char* value) {
  set_has_myname();
  myname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft_msg.JoinResponse.myname)
}
inline void JoinResponse::set_myname(const char* value, size_t size) {
  set_has_myname();
  myname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft_msg.JoinResponse.myname)
}
inline ::std::string* JoinResponse::mutable_myname() {
  set_has_myname();
  // @@protoc_insertion_point(field_mutable:raft_msg.JoinResponse.myname)
  return myname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinResponse::release_myname() {
  // @@protoc_insertion_point(field_release:raft_msg.JoinResponse.myname)
  clear_has_myname();
  return myname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinResponse::set_allocated_myname(::std::string* myname) {
  if (myname != NULL) {
    set_has_myname();
  } else {
    clear_has_myname();
  }
  myname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), myname);
  // @@protoc_insertion_point(field_set_allocated:raft_msg.JoinResponse.myname)
}

// required string passwd = 3;
inline bool JoinResponse::has_passwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinResponse::set_has_passwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinResponse::clear_has_passwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinResponse::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_passwd();
}
inline const ::std::string& JoinResponse::passwd() const {
  // @@protoc_insertion_point(field_get:raft_msg.JoinResponse.passwd)
  return passwd_.GetNoArena();
}
inline void JoinResponse::set_passwd(const ::std::string& value) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:raft_msg.JoinResponse.passwd)
}
#if LANG_CXX11
inline void JoinResponse::set_passwd(::std::string&& value) {
  set_has_passwd();
  passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:raft_msg.JoinResponse.passwd)
}
#endif
inline void JoinResponse::set_passwd(const char* value) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:raft_msg.JoinResponse.passwd)
}
inline void JoinResponse::set_passwd(const char* value, size_t size) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:raft_msg.JoinResponse.passwd)
}
inline ::std::string* JoinResponse::mutable_passwd() {
  set_has_passwd();
  // @@protoc_insertion_point(field_mutable:raft_msg.JoinResponse.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinResponse::release_passwd() {
  // @@protoc_insertion_point(field_release:raft_msg.JoinResponse.passwd)
  clear_has_passwd();
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinResponse::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    set_has_passwd();
  } else {
    clear_has_passwd();
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:raft_msg.JoinResponse.passwd)
}

// optional .raft_msg.JoinError join_err = 4;
inline bool JoinResponse::has_join_err() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoinResponse::set_has_join_err() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoinResponse::clear_has_join_err() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoinResponse::clear_join_err() {
  join_err_ = 0;
  clear_has_join_err();
}
inline ::raft_msg::JoinError JoinResponse::join_err() const {
  // @@protoc_insertion_point(field_get:raft_msg.JoinResponse.join_err)
  return static_cast< ::raft_msg::JoinError >(join_err_);
}
inline void JoinResponse::set_join_err(::raft_msg::JoinError value) {
  assert(::raft_msg::JoinError_IsValid(value));
  set_has_join_err();
  join_err_ = value;
  // @@protoc_insertion_point(field_set:raft_msg.JoinResponse.join_err)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace raft_msg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_join_5fresponse_2eproto__INCLUDED
